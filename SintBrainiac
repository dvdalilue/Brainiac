#!/usr/bin/env ruby

###############################
#Definicion del Main del Lexer#
###############################
require_relative 'Lexer'
require_relative 'Parser'

def to_s_recursive(ast,prof)

  if !ast.class.eql?Array
    ast.attr_value.each do |name|
      if !(name[0] =~ /\A.*\./)
        if name[1].class.name =~ /\A\Tk.*/ 
          puts "#{prof}#{name[0].upcase}: #{name[1].text.upcase}"
        else
          puts "#{prof}#{name[0].upcase}"
          to_s_recursive(name[1], "#{prof}  ")
        end
      end
    end
  else
    ast.each do |n|
      puts "#{prof}#{n.class.name.upcase}"
      to_s_recursive(n,"#{prof}  ")
    end
  end
end

def main

  input = File::read(ARGV[0]) #Lectura de entrada en un string
  parser = Parser::new.parse(Lexer::new(input)) #Creacion de un lexer

  to_s_recursive(parser," ")
  
 # puts parser.attr_value[0][1]

  #puts parser.to_s
  
end

main
